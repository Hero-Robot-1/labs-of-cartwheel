export declare enum MessageAction {
    blockchainList = "blockchainList",
    blockchainNode = "blockchainNode",
    coinBuy = "coinBuy",
    coinGetBalance = "coinGetBalance",
    coinGetTransactions = "coinGetTransactions",
    coinSendToWallet = "coinSendToWallet",
    coinSendToUser = "coinSendToUser",
    cryptoGetBalance = "cryptoGetBalance",
    cryptoGetExchangeRates = "cryptoGetExchangeRates",
    cryptoGetTransactions = "cryptoGetTransactions",
    nftBuyWithFiat = "nftBuyWithFiat",
    nftGetBalance = "nftGetBalance",
    nftGetTransactions = "nftGetTransactions",
    nftSendToWallet = "nftSendToWallet",
    nftSendToUser = "nftSendToUser",
    tokenGetBalance = "tokenGetBalance",
    tokenGetTransactions = "tokenGetTransactions",
    tokenSendToWallet = "tokenSendToWallet",
    tokenSendToUser = "tokenSendToUser",
    transactionSend = "transactionSend",
    transactionBatch = "transactionBatch",
    userChangeId = "userChangeId",
    walletCreate = "walletCreate",
    walletCreateRecovery = "walletCreateRecovery",
    walletConnect = "walletConnect",
    walletExists = "walletExists",
    walletGetAddress = "walletGetAddress",
    walletGetAddresses = "walletGetAddresses",
    walletGetRecoveryStatus = "walletGetRecoveryStatus",
    walletLogin = "walletLogin",
    walletLoggedIn = "walletLoggedIn",
    walletLogout = "walletLogout",
    walletRecreate = "walletRecreate",
    walletShowAddress = "walletShowAddress",
    walletShowRecoveryPhrase = "walletShowRecoveryPhrase",
    walletSignMessage = "walletSignMessage",
    walletSignTransaction = "walletSignTransaction",
    walletSignTypedData = "walletSignTypedData",
    walletProviderSendTransaction = "walletProviderSendTransaction",
    walletProviderSignMessage = "walletProviderSignMessage",
    walletProviderGetGasPrice = "walletProviderGetGasPrice",
    providerSupportedBlockchainList = "providerSupportedBlockchainList"
}
export declare const SdkMessagingCoder: {
    encodeMessage: (message: any) => string;
    decodeMessage: (message: string) => any;
};
export declare const SdkMessagingService: {
    sendToBackend: (message: any, send: (message: string) => Promise<string>) => Promise<any>;
    handleFromFrontend: (handler: () => Promise<any>) => Promise<string>;
};
